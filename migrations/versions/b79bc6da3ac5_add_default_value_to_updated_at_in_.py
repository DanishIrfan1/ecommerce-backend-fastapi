"""Add default value to updated_at in users table

Revision ID: b79bc6da3ac5
Revises: 0001_initial
Create Date: 2025-05-28 23:16:19.830578

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b79bc6da3ac5'
down_revision = '0001_initial'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_category',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('product_id', 'category_id')
    )
    op.drop_table('product_categories')
    op.add_column('addresses', sa.Column('street_address', sa.String(length=255), nullable=False))
    op.alter_column('addresses', 'city',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('addresses', 'state',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=True)
    op.alter_column('addresses', 'country',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('addresses', 'is_default',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.create_index(op.f('ix_addresses_id'), 'addresses', ['id'], unique=False)
    op.drop_constraint(op.f('addresses_user_id_fkey'), 'addresses', type_='foreignkey')
    op.create_foreign_key(None, 'addresses', 'users', ['user_id'], ['id'])
    op.drop_column('addresses', 'updated_at')
    op.drop_column('addresses', 'address_line1')
    op.drop_column('addresses', 'address_line2')
    op.drop_column('addresses', 'created_at')
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('categories', 'description',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.drop_column('categories', 'updated_at')
    op.drop_column('categories', 'created_at')
    op.alter_column('order_items', 'unit_price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(precision=2),
               existing_nullable=False)
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    op.drop_constraint(op.f('order_items_order_id_fkey'), 'order_items', type_='foreignkey')
    op.drop_constraint(op.f('order_items_product_id_fkey'), 'order_items', type_='foreignkey')
    op.create_foreign_key(None, 'order_items', 'products', ['product_id'], ['id'])
    op.create_foreign_key(None, 'order_items', 'orders', ['order_id'], ['id'])
    op.drop_column('order_items', 'updated_at')
    op.drop_column('order_items', 'created_at')
    op.add_column('orders', sa.Column('customer_id', sa.Integer(), nullable=False))
    op.add_column('orders', sa.Column('shipping_address_id', sa.Integer(), nullable=True))
    op.add_column('orders', sa.Column('billing_address_id', sa.Integer(), nullable=True))
    op.add_column('orders', sa.Column('payment_id', sa.String(length=100), nullable=True))
    op.add_column('orders', sa.Column('tracking_number', sa.String(length=100), nullable=True))
    op.alter_column('orders', 'order_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('orders', 'total_amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(precision=2),
               existing_nullable=False)
    op.alter_column('orders', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.drop_constraint(op.f('orders_address_id_fkey'), 'orders', type_='foreignkey')
    op.drop_constraint(op.f('orders_user_id_fkey'), 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'addresses', ['billing_address_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'users', ['customer_id'], ['id'])
    op.create_foreign_key(None, 'orders', 'addresses', ['shipping_address_id'], ['id'])
    op.drop_column('orders', 'updated_at')
    op.drop_column('orders', 'address_id')
    op.drop_column('orders', 'user_id')
    op.drop_column('orders', 'created_at')
    op.add_column('products', sa.Column('inventory', sa.Integer(), nullable=True))
    op.add_column('products', sa.Column('sku', sa.String(length=50), nullable=True))
    op.add_column('products', sa.Column('owner_id', sa.Integer(), nullable=False))
    op.alter_column('products', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=200),
               existing_nullable=False)
    op.alter_column('products', 'price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(precision=2),
               existing_nullable=False)
    op.alter_column('products', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('products', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_unique_constraint(None, 'products', ['sku'])
    op.create_foreign_key(None, 'products', 'users', ['owner_id'], ['id'])
    op.drop_column('products', 'stock_quantity')
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_username_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_username_key'), 'users', ['username'])
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'])
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.add_column('products', sa.Column('stock_quantity', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_constraint(None, 'products', type_='unique')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.alter_column('products', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('products', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('products', 'price',
               existing_type=sa.Float(precision=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('products', 'name',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('products', 'owner_id')
    op.drop_column('products', 'sku')
    op.drop_column('products', 'inventory')
    op.add_column('orders', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('orders', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('orders', sa.Column('address_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('orders', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key(op.f('orders_user_id_fkey'), 'orders', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('orders_address_id_fkey'), 'orders', 'addresses', ['address_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.alter_column('orders', 'status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('orders', 'total_amount',
               existing_type=sa.Float(precision=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('orders', 'order_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('orders', 'tracking_number')
    op.drop_column('orders', 'payment_id')
    op.drop_column('orders', 'billing_address_id')
    op.drop_column('orders', 'shipping_address_id')
    op.drop_column('orders', 'customer_id')
    op.add_column('order_items', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('order_items', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'order_items', type_='foreignkey')
    op.drop_constraint(None, 'order_items', type_='foreignkey')
    op.create_foreign_key(op.f('order_items_product_id_fkey'), 'order_items', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('order_items_order_id_fkey'), 'order_items', 'orders', ['order_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.alter_column('order_items', 'unit_price',
               existing_type=sa.Float(precision=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.add_column('categories', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('categories', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.alter_column('categories', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('categories', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.add_column('addresses', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('addresses', sa.Column('address_line2', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('addresses', sa.Column('address_line1', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('addresses', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'addresses', type_='foreignkey')
    op.create_foreign_key(op.f('addresses_user_id_fkey'), 'addresses', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_addresses_id'), table_name='addresses')
    op.alter_column('addresses', 'is_default',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('addresses', 'country',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('addresses', 'state',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('addresses', 'city',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_column('addresses', 'street_address')
    op.create_table('product_categories',
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('product_categories_category_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('product_categories_product_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id', 'category_id', name=op.f('product_categories_pkey'))
    )
    op.drop_table('product_category')
    # ### end Alembic commands ###
